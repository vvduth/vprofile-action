name: vprofile-actions
on: workflow_dispatch
env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: vprofileapp
  EKS_CLUSTER: vprofile-eks
jobs: 
  Testing: 
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: maven test
        run: mvn test
      
      - name: check style
        run: mvn checkstyle:checkstyle

      - name: set up java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      
      # - name: setup sonarQube
      #   uses: warchant/setup-sonar-scanner@v7

      # - name: sonarQube scan  
      #   run: sonar-scanner
      #      -Dsonar.host.url=${{ secrets.SONAR_URL }}
      #      -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      #      -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
      #      -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
      #      -Dsonar.sources=src/
      #      -Dsonar.junit.reportsPath=target/surefire-reports/ 
      #      -Dsonar.jacoco.reportsPath=target/jacoco.exec 
      #      -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml

      # - name: Sonar Qube quality gate check
      #   id: sonarqube-quality-gate-check
      #   uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_URL }} #OPTIONAL

  BUILD_AND_PUBLISH:   
    needs: Testing
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Build & Upload image to ECR
        uses: appleboy/docker-ecr-action@master
        with:
         access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
         secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         registry: ${{ secrets.REGISTRY }}
         repo: ${{ env.ECR_REPOSITORY }}
         region: ${{ env.AWS_REGION }}
         tags: latest,${{ github.run_number }}
         daemon_off: false
         dockerfile: ./Dockerfile
         context: ./

